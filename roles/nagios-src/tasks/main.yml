---
# This will install Nagios
# Version 1.0

- name: Ensure download directory is present
  file: path={{ ansible_env.HOME }}/nagios state=directory

- name: Downloading the EPEL repository definitions for Centos.
  sudo: yes
  get_url: url=http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm dest={{ ansible_env.HOME }}/nagios/epel-release-6-8.noarch.rpm
  when: is_centos

- name: Downloading and enable the EPEL repository definitions for Centos.
  sudo: yes
  yum: name={{ ansible_env.HOME }}/nagios//epel-release-6-8.noarch.rpm state=present
  when: is_centos

- name: Install Nagios prerequisites for CentOS
  sudo: yes
  yum: pkg={{ item }} state=present
  with_items:
   - gcc
   - glibc
   - glibc-common
   - gd
   - gd-devel
   - make
   - perl
   - perl-devel
   - wget
   - python-passlib
  when: is_centos

- name: Install Nagios prerequisites for Debian
  sudo: yes 
  apt: pkg={{ item }} state=present
  with_items:
   - linux-headers-{{ ansible_kernel }}
   - build-essential
   - python-passlib
  when: is_debian

- name: Install Nagios prerequisites for Ubuntu
  sudo: yes
  apt: pkg={{ item }} state=present
  with_items:
   - linux-headers-{{ ansible_kernel }}
   - build-essential
   - python-passlib
  when: is_ubuntu

- name: Install plugin prerequisites for CentOS
  sudo: yes
  yum: pkg={{ item }} state=present
  with_items:
   - openssl-devel
   - fping
   - openldap-devel
   - postgresql-devel
   - radiusclient-ng-devel
   - samba-client
   - libsmbclient
  when: is_centos

- name: Install Plugin prerequisites for Debian
  sudo: yes
  apt: pkg={{ item }} state=present
  with_items:
   - libssl-dev
   - dnsutils
   - fping
   - libldap2-dev
   - libpq-dev
   - libradiusclient-ng-dev
   - smbclient
   - gawk
  when: is_debian

- name: Install Plugin prerequisites for Ubuntu
  sudo: yes
  apt: pkg={{ item }} state=present
  with_items:
   - libssl-dev
   - dnsutils
   - fping
   - libldap2-dev
   - libpq-dev
   - libradiusclient-ng-dev
   - smbclient
   - gawk
  when: is_ubuntu

- name: Create nagcmd group
  sudo: yes
  group: name=nagcmd state=present

- name: Create nagios user
  sudo: yes
  user: name=nagios state=present groups=nagcmd

- name: Add apache user to nagcmd group
  sudo: yes
  user: name={{ apacheuser }} state=present groups=nagcmd

- name: GET Nagios
  sudo: yes
  get_url: url={{ nagiosurl }} dest={{ ansible_env.HOME }}/nagios/{{ nagiossrc }}.tar.gz

- name: Get Plugins
  sudo: yes
  get_url: url={{ pluginsurl }} dest={{ ansible_env.HOME }}/nagios/{{ pluginssrc }}.tar.gz

- name: Get NRPE
  sudo: yes
  get_url: url={{ nrpeurl }} dest={{ ansible_env.HOME }}/nagios/{{ nrpesrc }}.tar.gz

- name: Unpack Nagios source files
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios && tar -xzvf {{ nagiossrc }}.tar.gz creates={{ ansible_env['HOME'] }}/nagios/{{ nagiossrc }}

- name: Configure for Centos
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ nagiossrc }} && ./configure --with-command-group=nagcmd creates={{ ansible_env['HOME'] }}/nagios/{{ nagiossrc }}/Makefile
  when: is_centos

- name: Configure for Debian
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ nagiossrc }} && ./configure --with-command-group=nagcmd creates={{ ansible_env['HOME'] }}/nagios/{{ nagiossrc }}/Makefile
  when: is_debian

- name: Configure for Ubuntu
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ nagiossrc }} && ./configure --with-command-group=nagcmd -with-httpd_conf=/etc/apache2/conf-available creates={{ ansible_env['HOME'] }}/nagios/{{ nagiossrc }}/Makefile
  when: is_ubuntu

- name: Make all
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ nagiossrc }} && make all creates={{ ansible_env['HOME'] }}/nagios/{{ nagiossrc }}/base/nagios

- name: Make install
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ nagiossrc }} && make install creates=/usr/local/nagios/bin/nagios

- name: Make install-config 
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ nagiossrc }} && make install-config creates=/usr/local/nagios/etc/nagios.cfg

- name: Make install-commandmode
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ nagiossrc }} && make install-commandmode creates=/usr/local/nagios/var/rw

- name: Make install-devel
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ nagiossrc }} && make install-devel creates=/usr/local/nagios/include/nagios/nagios.h

- name: Make install-webconf for Centos
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ nagiossrc }} && make install-webconf creates=/etc/httpd/conf.d/nagios.conf
  notify: restart apache
  when: is_centos

- name: Make install-webconf for Debian
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ nagiossrc }} && make install-webconf creates=/etc/apache2/conf.d/nagios.conf
  notify: restart apache
  when: is_debian

- name: Make install-webconf for Ubuntu
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ nagiossrc }} && make install-webconf creates=/etc/apache2/conf-available/nagios.conf
  when: is_ubuntu

- name: Activate Nagios site on Ubuntu 14.04
  sudo: yes
  file: src=/etc/apache2/conf-available/nagios.conf dest=/etc/apache2/conf-enabled/nagios.conf state=link owner=root group=root
  notify: restart apache
  when: is_ubuntu

- name: Make install-init
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ nagiossrc }} && make install-init creates=/etc/init.d/nagios

- name: Set htpasswd for nagiosadmin
  sudo: yes
  htpasswd: path=/usr/local/nagios/etc/htpasswd.users name=nagiosadmin password={{ nagiosadminpass }} state=present

- name: Unpack Plugin source files
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios && tar -xzvf {{ pluginssrc }}.tar.gz creates={{ ansible_env['HOME'] }}/nagios/{{ pluginssrc }}

- name: Configure Plugins
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ pluginssrc }} && ./configure --with-nagios-user=nagios --with-nagios-group=nagios --with-openssl=/usr/bin/openssl creates={{ ansible_env['HOME'] }}/nagios/{{ pluginssrc }}/Makefile

- name: Make Plugins
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ pluginssrc }} && make creates={{ ansible_env['HOME'] }}/nagios/{{ pluginssrc }}/plugins/check_ping

- name: Make Install Plugins
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ pluginssrc }} && make install creates=/usr/local/nagios/libexec/check_ping

- name: Unpack NRPE source files
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios && tar -xzvf {{ nrpesrc }}.tar.gz creates={{ ansible_env['HOME'] }}/nagios/{{ nrpesrc }}

- name: Configure NRPE
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ nrpesrc }} && ./configure --with-ssl=/usr/bin/openssl --with-ssl-lib=/usr/lib/x86_64-linux-gnu creates={{ ansible_env['HOME'] }}/nagios/{{ nrpesrc }}/Makefile

- name: Make NRPE
  sudo: yes
  shell: cd {{ ansible_env.HOME }}/nagios/{{ nrpesrc }} && make all creates={{ ansible_env['HOME'] }}/nagios/{{ nrpesrc }}/src/check_nrpe

- name: Copy check_nrpe
  sudo: yes
  shell: cp {{ ansible_env['HOME'] }}/nagios/{{ nrpesrc }}/src/check_nrpe /usr/local/nagios/libexec/check_nrpe creates=/usr/local/nagios/libexec/check_nrpe

- name: Ensure Nagios is started
  sudo: yes
  service: name=nagios state=started enabled=yes

- name: Fix Nagios startup on Debian
  sudo: yes
  shell: cd /etc/rc2.d && ln -s ../init.d/nagios S18nagios creates=/etc/rc2.d/S18nagios
  #file: src=/etc/init.d/nagios dest=/etc/rc2.d/S99nagios state=link owner=root group=root
  when: is_debian

- name: Dump all vars
  template: >
    src=ansible_vars.j2
    dest=/tmp/ansible_vars.log
  sudo: yes

- name: Check if SELinux is running in enforcing mode and change access
  sudo: yes
  file: path=/usr/local/nagios setype=httpd_sys_content_t state=directory recurse=yes
  when: ansible_selinux != False and ansible_selinux.status == "enforcing"

